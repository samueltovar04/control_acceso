{"remainingRequest":"C:\\Lagash\\Projects\\control\\control_web\\src\\main\\web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Lagash\\Projects\\control\\control_web\\src\\main\\web\\node_modules\\rxjs\\operators\\timeInterval.js","dependencies":[{"path":"C:\\Lagash\\Projects\\control\\control_web\\src\\main\\web\\node_modules\\rxjs\\operators\\timeInterval.js","mtime":499162500000},{"path":"C:\\Lagash\\Projects\\control\\control_web\\src\\main\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Lagash\\Projects\\control\\control_web\\src\\main\\web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\r\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar async_1 = require('../scheduler/async');\r\nfunction timeInterval(scheduler) {\r\n    if (scheduler === void 0) {\r\n        scheduler = async_1.async;\r\n    }\r\n    return function (source) { return source.lift(new TimeIntervalOperator(scheduler)); };\r\n}\r\nexports.timeInterval = timeInterval;\r\nvar TimeInterval = /*@__PURE__*/ (function () {\r\n    function TimeInterval(value, interval) {\r\n        this.value = value;\r\n        this.interval = interval;\r\n    }\r\n    return TimeInterval;\r\n}());\r\nexports.TimeInterval = TimeInterval;\r\n;\r\nvar TimeIntervalOperator = /*@__PURE__*/ (function () {\r\n    function TimeIntervalOperator(scheduler) {\r\n        this.scheduler = scheduler;\r\n    }\r\n    TimeIntervalOperator.prototype.call = function (observer, source) {\r\n        return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\r\n    };\r\n    return TimeIntervalOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar TimeIntervalSubscriber = /*@__PURE__*/ (function (_super) {\r\n    __extends(TimeIntervalSubscriber, _super);\r\n    function TimeIntervalSubscriber(destination, scheduler) {\r\n        _super.call(this, destination);\r\n        this.scheduler = scheduler;\r\n        this.lastTime = 0;\r\n        this.lastTime = scheduler.now();\r\n    }\r\n    TimeIntervalSubscriber.prototype._next = function (value) {\r\n        var now = this.scheduler.now();\r\n        var span = now - this.lastTime;\r\n        this.lastTime = now;\r\n        this.destination.next(new TimeInterval(value, span));\r\n    };\r\n    return TimeIntervalSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n",null]}
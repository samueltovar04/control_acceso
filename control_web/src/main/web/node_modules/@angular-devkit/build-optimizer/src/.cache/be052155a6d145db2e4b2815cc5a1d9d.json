{"remainingRequest":"C:\\Lagash\\Projects\\control\\control_web\\src\\main\\web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Lagash\\Projects\\control\\control_web\\src\\main\\web\\node_modules\\rxjs\\testing\\HotObservable.js","dependencies":[{"path":"C:\\Lagash\\Projects\\control\\control_web\\src\\main\\web\\node_modules\\rxjs\\testing\\HotObservable.js","mtime":499162500000},{"path":"C:\\Lagash\\Projects\\control\\control_web\\src\\main\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Lagash\\Projects\\control\\control_web\\src\\main\\web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\r\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\r\nvar Subject_1 = require('../Subject');\r\nvar Subscription_1 = require('../Subscription');\r\nvar SubscriptionLoggable_1 = require('./SubscriptionLoggable');\r\nvar applyMixins_1 = require('../util/applyMixins');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar HotObservable = /*@__PURE__*/ (function (_super) {\r\n    __extends(HotObservable, _super);\r\n    function HotObservable(messages, scheduler) {\r\n        _super.call(this);\r\n        this.messages = messages;\r\n        this.subscriptions = [];\r\n        this.scheduler = scheduler;\r\n    }\r\n    /** @deprecated internal use only */ HotObservable.prototype._subscribe = function (subscriber) {\r\n        var subject = this;\r\n        var index = subject.logSubscribedFrame();\r\n        subscriber.add(new Subscription_1.Subscription(function () {\r\n            subject.logUnsubscribedFrame(index);\r\n        }));\r\n        return _super.prototype._subscribe.call(this, subscriber);\r\n    };\r\n    HotObservable.prototype.setup = function () {\r\n        var subject = this;\r\n        var messagesLength = subject.messages.length;\r\n        /* tslint:disable:no-var-keyword */\r\n        for (var i = 0; i < messagesLength; i++) {\r\n            (function () {\r\n                var message = subject.messages[i];\r\n                /* tslint:enable */\r\n                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);\r\n            })();\r\n        }\r\n    };\r\n    return HotObservable;\r\n}(Subject_1.Subject));\r\nexports.HotObservable = HotObservable;\r\napplyMixins_1.applyMixins(HotObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);\r\n",null]}
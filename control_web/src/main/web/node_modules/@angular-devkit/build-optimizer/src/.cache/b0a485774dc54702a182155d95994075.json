{"remainingRequest":"C:\\Lagash\\Projects\\control\\control_web\\src\\main\\web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Lagash\\Projects\\control\\control_web\\src\\main\\web\\node_modules\\rxjs\\observable\\SubscribeOnObservable.js","dependencies":[{"path":"C:\\Lagash\\Projects\\control\\control_web\\src\\main\\web\\node_modules\\rxjs\\observable\\SubscribeOnObservable.js","mtime":499162500000},{"path":"C:\\Lagash\\Projects\\control\\control_web\\src\\main\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Lagash\\Projects\\control\\control_web\\src\\main\\web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\r\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\r\nvar Observable_1 = require('../Observable');\r\nvar asap_1 = require('../scheduler/asap');\r\nvar isNumeric_1 = require('../util/isNumeric');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar SubscribeOnObservable = /*@__PURE__*/ (function (_super) {\r\n    __extends(SubscribeOnObservable, _super);\r\n    function SubscribeOnObservable(source, delayTime, scheduler) {\r\n        if (delayTime === void 0) {\r\n            delayTime = 0;\r\n        }\r\n        if (scheduler === void 0) {\r\n            scheduler = asap_1.asap;\r\n        }\r\n        _super.call(this);\r\n        this.source = source;\r\n        this.delayTime = delayTime;\r\n        this.scheduler = scheduler;\r\n        if (!isNumeric_1.isNumeric(delayTime) || delayTime < 0) {\r\n            this.delayTime = 0;\r\n        }\r\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\r\n            this.scheduler = asap_1.asap;\r\n        }\r\n    }\r\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\r\n        if (delay === void 0) {\r\n            delay = 0;\r\n        }\r\n        if (scheduler === void 0) {\r\n            scheduler = asap_1.asap;\r\n        }\r\n        return new SubscribeOnObservable(source, delay, scheduler);\r\n    };\r\n    SubscribeOnObservable.dispatch = function (arg) {\r\n        var source = arg.source, subscriber = arg.subscriber;\r\n        return this.add(source.subscribe(subscriber));\r\n    };\r\n    /** @deprecated internal use only */ SubscribeOnObservable.prototype._subscribe = function (subscriber) {\r\n        var delay = this.delayTime;\r\n        var source = this.source;\r\n        var scheduler = this.scheduler;\r\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\r\n            source: source, subscriber: subscriber\r\n        });\r\n    };\r\n    return SubscribeOnObservable;\r\n}(Observable_1.Observable));\r\nexports.SubscribeOnObservable = SubscribeOnObservable;\r\n",null]}